name: Jekyll site CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Build
        run: bundle exec jekyll build --trace --future


  spelling:
    name: Spell Check
    if: false
    
    permissions:
      contents: read
      pull-requests: read
      actions: read
    
    outputs:
      followup: ${{ steps.spelling.outputs.followup }}
    
    runs-on: ubuntu-latest
    
    steps:
    - name: check-spelling
      id: spelling
      uses: check-spelling/check-spelling@v0.0.21
      with:
        # This workflow runs in response to both `push` and `pull_request`, if there's an open `pull_request` in the same repository for a given branch, there's no reason to spend resources checking both the `push` and the `pull_request`, so this flag tells the action while running for the `push` to find the `pull_request` and stop working early:
        suppress_push_for_open_pull_request: 1
        # The action will manage checking out the repository itself instead of requiring the workflow to use `actions/checkout...`:
        checkout: true
        # If running without `: write`, posting a comment won't work, and for security `: write` permissions are left to a distinct (optional) job, here we skip trying to post a comment:
        post_comment: 0
        use_magic_file: 1
        extra_dictionary_limit: 10
        extra_dictionaries:
          cspell:software-terms/src/software-terms.txt
          cspell:html/html.txt
          cspell:ruby/ruby.txt
          cspell:fullstack/fullstack.txt
          cspell:filetypes/filetypes.txt
        check_extra_dictionaries: ''